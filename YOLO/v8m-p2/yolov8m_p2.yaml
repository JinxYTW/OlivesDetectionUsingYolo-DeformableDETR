# YOLOv8m with P2 output added
# Modified to better detect small objects (e.g., olives)

# Parameters
nc: 1  # Nombre de classes (Ã  adapter dynamiquement via train_custom.yaml)
depth_multiple: 1.0
width_multiple: 1.0

# Backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [64, 3, 2]],         # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],        # 1-P2/4
   [-1, 3, C2f, [128]],
   [-1, 1, Conv, [256, 3, 2]],        # 3-P3/8
   [-1, 6, C2f, [256]],
   [-1, 1, Conv, [512, 3, 2]],        # 5-P4/16
   [-1, 6, C2f, [512]],
   [-1, 1, Conv, [1024, 3, 2]],       # 7-P5/32
   [-1, 3, C2f, [1024]],
   [-1, 1, SPPF, [1024, 5]],          # 9
  ]

# Head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [6, 1, Concat, [1]],               # Cat backbone P4
   [-1, 3, C2f, [512]],

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [4, 1, Concat, [1]],               # Cat backbone P3
   [-1, 3, C2f, [256]],

   [-1, 1, Conv, [128, 1, 1]],        # P2 branch
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [2, 1, Concat, [1]],               # Cat backbone P2
   [-1, 1, C2f, [128]],

   [[12, 8, 4, 1], 1, Detect, [nc]],  # Detect(P2, P3, P4, P5)
  ]
